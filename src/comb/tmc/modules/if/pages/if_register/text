<Form horizontal>
<ul className='finance-modal'>
    <h1>企业基础信息</h1>
    <li>
        <Row>
            <Col lg={3} lgOffset={1}>
                <FormGroup>
                    <span className='finance-modal-title fl'>银行类别</span>
                    <FormControl
                        ref='boxvaluea'
                        className='fl'
                        type='text'
                        className='liyz'
                        isRequire={true}
                        placeholder='请输入银行类别'
                        value={this.state.banktype}
                        onChange={(e) => this.setState({ banktype: e.target.value })}
                    />
                </FormGroup>
            </Col>
        </Row>
    </li>
    <li>
        <Row>
            <Col lg={3} lgOffset={1}>
                <FormGroup>
                    <span className='finance-modal-title fl'>客户类别</span>
                    <FormControl
                        ref='boxvalueb'
                        className='fl'
                        type='text'
                        isRequire={true}
                        className='liyz'
                        placeholder='请输入客户类别'
                        value={this.state.customertype}
                        onChange={(e) => this.setState({ customertype: e.target.value })}
                    />
                </FormGroup>
            </Col>
            <Col lg={3}>
                <FormGroup>
                    <span className='finance-modal-title fl'>所属行业</span>
                    <FormControl
                        ref='boxvaluec'
                        className='fl'
                        type='text'
                        isRequire={true}
                        className='liyz'
                        placeholder='请输入所属行业'
                        htmlType="chinese"
                        value={this.state.Industryowned}
                        onChange={(e) => this.setState({ Industryowned: e.target.value })}
                    />
                </FormGroup>
            </Col>

        </Row>
    </li>
    <li>
        <Row>
            <Col lg={3} lgOffset={1}>
                <FormGroup>
                    <span className='finance-modal-title fl'>所在省</span>
                    <FormControl
                        ref='boxvalued'
                        className='fl'
                        type='text'
                        isRequire={true}
                        className='liyz'
                        placeholder='请输入所在省'
                        value={this.state.atprovince}
                        onChange={(e) => this.setState({ atprovince: e.target.value })}
                    />
                </FormGroup>
            </Col>
            <Col lg={3}>
                <FormGroup>
                    <span className='finance-modal-title fl'>所在市</span>
                    <FormControl
                        ref='boxvaluee'
                        className='fl'
                        type='text'
                        isRequire={true}
                        className='liyz'
                        placeholder='请输入所在市'
                        value={this.state.atcity}
                        onChange={(e) => this.setState({ atcity: e.target.value })}
                    />
                </FormGroup>
            </Col>

        </Row>
    </li>
    <li>
        <Row>
            <Col lg={3} lgOffset={1}>
                <FormGroup>
                    <span className='finance-modal-title fl'>所在区</span>
                    <FormControl
                        ref='boxvaluef'
                        className='fl'
                        type='text'
                        isRequire={true}
                        className='liyz'
                        placeholder='请输入所在区'
                        value={this.state.atarea}
                        onChange={(e) => this.setState({ atarea: e.target.value })}
                    />
                </FormGroup>
            </Col>
            <Col lg={3}>
                <FormGroup>
                    <span className='finance-modal-title fl'>企业规模</span>
                    <FormControl
                        ref='boxvalueg'
                        className='fl'
                        type='text'
                        isRequire={true}
                        className='liyz'
                        placeholder='请输入企业规模'
                        value={this.state.enterprisescale}
                        onChange={(e) => this.setState({ enterprisescale: e.target.value })}
                    />
                </FormGroup>
            </Col>

        </Row>
    </li>
    <li>
        <Row>
            <Col lg={3} lgOffset={1}>
                <FormGroup>
                    <span className='finance-modal-title fl'>街道地址</span>
                    <FormControl
                        ref='boxvalueh'
                        className='fl'
                        type='text'
                        isRequire={true}
                        className='liyz'
                        placeholder='请输入街道地址'
                        value={this.state.streetaddress}
                        onChange={(e) => this.setState({ streetaddress: e.target.value })}
                    />
                </FormGroup>
            </Col>
            <Col lg={3}>
                <FormGroup>
                    <span className='finance-modal-title fl'>注册地电话号码</span>
                    <FormControl
                        ref='boxvaluei'
                        className='fl'
                        type='text'
                        isRequire={true}
                        className='liyz'
                        Name='phone'
                        placeholder='请输入注册地电话号码'
                        maxLength='11'
                        value={this.state.registeredtelephone}
                        onChange={(e) => this.setState({ registeredtelephone: e.target.value })}
                    />
                </FormGroup>
            </Col>

        </Row>
    </li>
</ul>
<ul className='finance-modal'>
    <h1>资质信息</h1>
    <li>
        <Row>
            <Col lg={3} lgOffset={1}>
                <FormGroup>
                    <span className='finance-modal-title fl'>组织机构代码</span>
                    <FormControl
                        ref='boxvaluej'
                        className='fl'
                        type='text'
                        isRequire={true}
                        className='liyz'
                        placeholder='请输入组织机构代码'
                        value={this.state.organizationcode}
                        onChange={(e) => this.setState({ organizationcode: e.target.value })}
                    />
                </FormGroup>
            </Col>
            <Col lg={3} >
                <FormGroup>
                    <span className='finance-modal-title fl'>注册登记号</span>
                    <FormControl
                        ref='boxvaluek'
                        className='fl'
                        type='text'
                        isRequire={true}
                        className='liyz'
                        placeholder='请输入注册登记号'
                        value={this.state.serialnumber}
                        onChange={(e) => this.setState({ serialnumber: e.target.value })}
                    />
                </FormGroup>
            </Col>
        </Row>
    </li>
    <li>
        <Row>
            <Col lg={3} lgOffset={1}>
                <FormGroup>
                    <span className='finance-modal-title fl'>注册期限</span>
                    <FormControl
                        ref='boxvaluel'
                        className='fl'
                        type='text'
                        isRequire={true}
                        className='liyz'
                        placeholder='请输入注册期限'
                        value={this.state.registrationperiod}
                        onChange={(e) => this.setState({ registrationperiod: e.target.value })}
                    />
                </FormGroup>
            </Col>
            <Col lg={3}>
                <FormGroup>
                    <span className='finance-modal-title fl'>注册资本</span>
                    <FormControl
                        ref='boxvaluem'
                        className='fl'
                        type='text'
                        isRequire={true}
                        className='liyz'
                        placeholder='请输入注册资本'
                        value={this.state.registeredcapital}
                        onChange={(e) => this.setState({ registeredcapital: e.target.value })}
                    />
                </FormGroup>
            </Col>

        </Row>
    </li>
    <li>
        <Row>
            <Col lg={3} lgOffset={1}>
                <FormGroup>
                    <span className='finance-modal-title fl'>法人姓名</span>
                    <FormControl
                        ref='boxvaluen'
                        className='fl'
                        type='text'
                        isRequire={true}
                        className='liyz'
                        placeholder='请输入法人姓名'
                        value={this.state.personname}
                        onChange={(e) => this.setState({ personname: e.target.value })}
                    />
                </FormGroup>
            </Col>
            <Col lg={3}>
                <FormGroup>
                    <span className='finance-modal-title fl'>法人联系电话</span>
                    <FormControl
                        ref='boxvalueo'
                        className='fl'
                        type='text'
                        isRequire={true}
                        className='liyz'
                        maxLength='11'
                        placeholder='请输入法人联系电话'
                        value={this.state.corporatetelephone}
                        onChange={(e) => this.setState({ corporatetelephone: e.target.value })}
                    />
                </FormGroup>
            </Col>

        </Row>
    </li>
    <li>
        <Row>
            <Col lg={3} lgOffset={1}>
                <FormGroup>
                    <span className='finance-modal-title fl'>法人证件号</span>
                    <FormControl
                        ref='boxvaluep'
                        className='fl'
                        type='text'
                        isRequire={true}
                        className='liyz'
                        placeholder='请输入法人证件号'
                        value={this.state.documentnumber}
                        onChange={(e) => this.setState({ documentnumber: e.target.value })}
                    />
                </FormGroup>
            </Col>
            <Col lg={3}>
                <FormGroup>
                    <span className='finance-modal-title fl'>法人证件到期日</span>
                    <FormControl
                        ref='boxvalueq'
                        className='fl'
                        type='text'
                        isRequire={true}
                        className='liyz'
                        placeholder='请输入法人证件到期日'
                        value={this.state.expirationdate}
                        onChange={(e) => this.setState({ expirationdate: e.target.value })}
                    />
                    {/* <DatePicker
            format={format}
            onSelect={this.onSelect}
            expirationdate
            onChange={(d) => {
                 this.setState({ repaycostbegindate: d.format("YYYY-MM-DD HH:mm:ss")})
            }}
            locale={zhCN}
            value={moment(this.state.repaycostbegindate)}
            placeholder={dateInputPlaceholder}
        /> */}
                </FormGroup>
            </Col>

        </Row>
    </li>
    <li>
        <Row>
            <Col lg={3} lgOffset={1}>
                <FormGroup>
                    <span className='finance-modal-title fl'>财务主管姓名</span>
                    <FormControl
                        ref='boxvaluer'
                        className='fl'
                        type='text'
                        isRequire={true}
                        className='liyz'
                        placeholder='请输入财务主管姓名'
                        value={this.state.financename}
                        onChange={(e) => this.setState({ financename: e.target.value })}
                    />
                </FormGroup>
            </Col>
            <Col lg={3}>
                <FormGroup>
                    <span className='finance-modal-title fl'>财务主管手机号</span>
                    <FormControl
                        ref='boxvalues'
                        className='fl'
                        type='text'
                        isRequire={true}
                        className='liyz'
                        maxLength='11'
                        placeholder='请输入财务主管手机号'
                        value={this.state.financetell}
                        onChange={(e) => this.setState({ financetell: e.target.value })}
                    />
                </FormGroup>
            </Col>

        </Row>
    </li>
</ul>
<ul className='finance-modal'>
    <h1>签约信息</h1>
    <li>
        <Row>
            <Col lg={3} lgOffset={1}>
                <FormGroup>
                    <span style={{ width: '13rem' }} className='finance-modal-title fl spantop'>绑定银行对公账户</span>
                    <FormControl
                        ref='boxvaluet'
                        className='fl formContr liyz'
                        type='text'
                        isRequire={true}
                        placeholder='请输入绑定银行对公账户'
                        value={this.state.thebank}
                        onChange={(e) => this.setState({ thebank: e.target.value })}
                    />
                </FormGroup>
            </Col>
        </Row>
    </li>
    <li>
        <Row>
            <Col lg={2} lgOffset={4}>
                <Button
                    colors="primary"
                    onClick={this.changebox}
                >
                    提交申请
         </Button>
            </Col>
        </Row>
    </li>
</ul>
</Form>


// import React, { Component } from "react";
// import './index.less';
// import Formregister from '../../containers/form_register';
// import {
//     Row,
//     Col,
//     FormControl,
//     FormItem,
//     Form,
//     Button,
//     FormGroup,
//     Select,
//     DatePicker,

// } from 'tinper-bee';
// //  时间
// import { Link } from 'react-router';
// import zhCN from 'rc-calendar/lib/locale/zh_CN';
// import enUS from 'rc-calendar/lib/locale/en_US';
// import moment from 'moment';
// const format = 'YYYY-MM-DD HH:mm:ss';
// const dateInputPlaceholder = '选择日期';
// const flag = false;
// export default class RegisterT extends Component {
//     constructor() {
//         super();
//         /**
//          * gBName 英文企业全称    cNName   中文企业全称
//          * idNo   证件号码        custType   客户类别
//          * trdCode    行业代码    regld    注册登记号
//          * limitDate    注册期限        corpName   法人代表姓名
//          * legPerld     法定代表人姓名        corpIdCardLimitDate   法人证件到期日 
//          * legalPhone   法人代表联系电话	    cfoName 财务主管姓名
//          * telephone        财务主管电话      capReg      	注册资本
//          * medSmEntFlg  企业规模            regDist     省市区街道代码
//          * regStrentDoor   街道地址（具体到门牌号）	  regTePhone   注册地址电话号码
//          * acctBank   绑定卡清算行行号       account    绑定银行对公账号
//          *  depType   存款人类别          regType        注册类型
//          * docuOpName   制单员姓名        docuOpMobile   制单员手机号
//          * docuOpIdCard      制单员身份证号码    checkerName    复核员姓名
//          * checkerMobile        复核员手机号    checkerIdCard 	复核员身份证号码	
//          * channelId        接入渠道Id          dynamicCode   动态验证码
//          * corpIdType       法人证件类型      corpIdNumber     法人证件类型对应的证件号
//          * docuOpIdType     制单员证件类型     docuOpIdNumber  制单员证件类型对应的证件号
//          * checkerIdType    复核员证件类型     checkerIdNumber 复核员证件类型对应的证件号
//          * **/
//         this.state = {
//             openUserFiled=[
//                 gBName = [],
//                 cNName = [],
//                 idNo = [],
//                 custType = [],
//                 regld = [],
//                 atarea = [],
//                 limitDate = [],
//                 corpName = [],
//                 legPerld = [],
//                 corpIdCardLimitDate = [],
//                 legalPhone = [],
//                 cfoName = [],
//                 telephone = [],
//                 capReg = [],
//                 medSmEntFlg = [],
//                 regDist = [],
//                 regStrentDoor = [],
//                 regTePhone = [],
//                 acctBank = [],
//                 account = [],
//                 depType = [],
//                 regType = [],
//                 docuOpName = [],
//                 docuOpMobile = [],
//                 docuOpIdCard = [],
//                 checkerName = [],
//                 checkerMobile = [],
//                 checkerIdCard = [],
//                 channelId = [],
//                 dynamicCode = [],
//                 corpIdType = [],
//                 corpIdNumber = [],
//                 docuOpIdType = [],
//                 docuOpIdNumber = [],
//                 checkerIdType = [],
//                 checkerIdNumber = [],
//             ],
//             stepcurrent: 2,
//             checkboxT: false,
//         }
//     };
//     newvalue = () => {

//         return newvalues;
//     }


//     componentWillmount() {
//         onchangestepcurrent = () => {
//             this.setState({ stepcurrent: 2 })
//         }
//     }
//     checkForm = (flag, obj) => {
//         console.log(flag);
//         console.log(obj);
//     }
//     check = () => {
//         console.log(1)
//     }
//     onSelect = (e) => {
//         console.log(2)
//     }
//     changebox = () => {

//         // :alert('完整填写资料')
//         let refs = this.refs.boxvaluea
//         // for(let i=0;i<newvalues.length;i++){
//         //     if(newvalues[i].values.length==0){
//         //         alert('完整填写资料');
//         //         return this.setState({checkboxT:false})
//         //     }else{
//         //         return this.props.router.push({
//         //             pathname: '/if/Registers',
//         //         })
//         //     }
//         // }
//     }
//     //获取页面的字段渲染
//     getTableData = () => {
//         axios.post(rootURL + "search")
//             .then(function (res) {
//                 const { code, data, message } = res;
//                 if (success) {
//                     const openUserFiled = data.responseBody.openUserFiled;
//                     const newopenUserFiled = openUserFiled.map((item, index) => {
//                         const values = item.values;
//                         //获取所有的数据
//                         return {
//                             gBName=responseBody.XXXXXX,
//                             cNName= responseBody.cNName,
//                             idNo=responseBody.idNo,
//                             custType=responseBody.custType,
//                             regld= responseBody.regld,
//                             atarea= responseBody.atarea,
//                             limitDate= responseBody.limitDate,
//                             corpName= responseBody.corpName,
//                             legPerld= responseBody.legPerld,
//                             corpIdCardLimitDate= responseBody.corpIdCardLimitDate,
//                             legalPhone= responseBody.legalPhone,
//                             cfoName= responseBody.cfoName,
//                             telephone= responseBody.telephone,
//                             capReg= responseBody.capReg,
//                             medSmEntFlg= responseBody.medSmEntFlg,
//                             regDist= responseBody.regDist,
//                             regStrentDoor= responseBody.regStrentDoor,
//                             regTePhone= responseBody.regTePhone,
//                             acctBank= responseBody.acctBank,
//                             account= responseBody.account,
//                             depType= responseBody.depType,
//                             regType= responseBody.regType,
//                             docuOpName= responseBody.docuOpName,
//                             docuOpMobile= responseBody.docuOpMobile,
//                             docuOpIdCard= responseBody.docuOpIdCard,
//                             checkerName= responseBody.checkerName,
//                             checkerMobile= responseBody.checkerMobile,
//                             checkerIdCard= responseBody.checkerIdCard,
//                             channelId= responseBody.channelId,
//                             dynamicCode= responseBody.dynamicCode,
//                             corpIdType= responseBody.corpIdType,
//                             corpIdNumber= responseBody.corpIdNumber,
//                             docuOpIdType= responseBody.docuOpIdType,
//                             docuOpIdNumber= responseBody.docuOpIdNumber,
//                             checkerIdType= responseBody.checkerIdType,
//                             checkerIdNumber= responseBody.checkerIdNumberr,
//                         }
//                     })
//                     _this.setState({
// 						openUserFiled: openUserFiled,
					
// 					});
//                 }
//             })
//             .catch(function (res) {
//                 alert(res.message)
//             })
//     }
//     componentDidmount() {
//         this.getTableData();
//     }
//     //发送资料的请求
//     handleClick=()=>{
//         axios.post('/',{openUserFiled:this.state.openUserFiled})
//         .then(function(res){
//             if(res===ture){
//                 this.state.checkboxT ?
//                 this.props.router.push({
//                     pathname: '/if/activation',
//                 })
//                 : alert('请阅读《友企盈理财平台协议》')
//             }else{
//                 alert('验证失败，请重新验证')
//             }
//         })
//     }
//     render() {
//         return (

//             <div id='registert'>
//                 <Formregister stepcurrent={1} />
//                 <div>
//                     <ul>
//                 this.state.openUserFiled.map(item,index){
//                          <li>
//                          <Row>
//                              <Col lg={3} lgOffset={1}>
//                                  <FormGroup>
//                                      <span className='finance-modal-title fl'>{itemp[index][1]}</span>
//                                      <FormControl
//                                          className='fl'
//                                          type={item[index][4]}
//                                          className='liyz'
//                                          isRequire={item[index][5]}
//                                          placeholder={'请输入'+item[index][1]}
//                                          value={item[index][6]}
//                                          onChange={(e) => this.setState(
//                                              {
//                                                  [openUserFiled[index][1]]: e.target.value 
//                                             }
//                                          )}
//                                      />
//                                  </FormGroup>
//                                  <Button onClick={this.handleClick}></Button>
//                              </Col>
//                          </Row>
//                      </li>  
                        
//                 }
//                 </ul>
//                 </div>
//             </div>


//         )
//     }

// }


gBName  英文客户全称(英文企业全称)  70  input   text    M   No English Name
cNName  中文客户全称(中文企业全称)  210 input   text    M   没有中文名称
idNo    组织机构代码  20  input   text    M   
custType    客户类别    4   select  option  M   URL
trdCode 行业代码    4   select  option  M   URL
regId   注册登记号   35  input   text    M   
limitDate   注册期限    12  input   text    M   20990101
corpName    法人代表姓名  105 input   text    M   
legPerId    法定代表人证件号    20  input   text    M   
corpIdCardLimitDate 法人证件到期日 8   input   text    M   
legalPhone  法人代表联系电话    35  input   text    M   
cfoName 财务主管姓名  105 input   text    M   
telephone   财务主管电话  35  input   text    M   
capReg  注册资本    20  input   text    M   
medSmEntFlg 企业规模    1   select  option  M   URL
province    省   20  select  option  M   URL
city    市   20  select  option  M   URL
regDist 区   20  select  option  M   URL
regStrentDoor   街道地址（具体到门牌号）    100 input   text    M   
regTePhone  注册地址电话号码    30  input   text    M   
acctBank    绑定卡清算行行号    30  select  option  M   URL
account 绑定银行对公账号    30  input   text    M   
depType 存款人类别   2   select  option  M   URL
regType 注册类型    1   select  option  M   URL
docuOpName  制单员姓名   30  input   text    M   
docuOpMobile    制单员手机号  30  input   text    M   
docuOpIdCard    制单员身份证号码    30  input   text    M   
checkerName 复核员姓名   30  input   text    M   
checkerMobile   复核员手机号  30  input   text    M   
checkerIdCard   复核员身份证号码    30  input   text    M   
channelId   接入渠道Id  6   input   text    M   
dynamicCode 动态验证码   6   input   text    M   
corpIdType  法人证件类型  1   input   text    O   
corpIdNumber    法人证件类型对应的证件号    32  input   text    O   
docuOpIdType    制单员证件类型 1   input   text    O   
docuOpIdNumber  制单员证件类型对应的证件号   32  input   text    O   
checkerIdType   复核员证件类型 1   input   text    O   
checkerIdNumber 复核员证件类型对应的证件号   32  input   text    O   
file1   企业营业执照  4000    input   file    M   
file2   组织机构代码证图片   4000    input   file    M   
file3   法人身份证正面图片   4000    input   file    M   
file4   法人身份证反面图片   4000    input   file    M   
file5   申请人身份证正面图片  4000  